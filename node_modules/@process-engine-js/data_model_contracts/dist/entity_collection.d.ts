import { ExecutionContext, IEntity, IToPojoOptions, IPrivateQueryOptions } from '@process-engine-js/core_contracts';
import { IEntityType } from './interfaces';
export declare class EntityCollection {
    private _data;
    count: number;
    offset: number;
    limit: number;
    private _options;
    private _entityType;
    constructor(entityType: IEntityType<IEntity>, entityDataSets?: Array<any>, count?: number, offset?: number, limit?: number, options?: IPrivateQueryOptions);
    readonly data: Array<IEntity>;
    readonly length: number;
    toPojos(context: ExecutionContext, options?: IToPojoOptions): Promise<any>;
    each(context: ExecutionContext, callback: Function): Promise<void>;
    add(entity: IEntity, distinct?: boolean): EntityCollection;
    addCollection(context: ExecutionContext, entityCollection: EntityCollection, distinct?: boolean): Promise<EntityCollection>;
    addCollectionDistinct(context: ExecutionContext, entityCollection: EntityCollection): Promise<EntityCollection>;
    private _addCollection(context, entityCollection, distinct?);
    private _loadMore(context, offset, limit);
}
