export interface IMetadataProvider {
    getForInstance(metadataKey: MetadataType, namespace: string, target: any, targetKey?: string): any;
    getForOwnInstance(metadataKey: MetadataType, namespace: string, target: any, targetKey?: string): any;
    getForType(metadataKey: MetadataType, namespace: string, type: string, targetKey?: string): any;
    getAllForType(metadataKey: MetadataType, namespace: string, type: string): any;
    setForInstance(metadataKey: MetadataType, metadataValue: any, target: any, targetKey?: string): void;
    setForType(metadataKey: MetadataType, metadataValue: any, namespace: string, type: string, targetKey?: string): void;
}
export declare enum MetadataType {
    RequiredClaim = 0,
    SchemaAttribute = 1,
    SchemaClass = 2,
    Promotion = 3,
}
