
export interface IMetadataProvider {
  getForInstance(metadataKey: MetadataType, namespace: string, target: any, targetKey?: string): any;
  getForOwnInstance(metadataKey: MetadataType, namespace: string, target: any, targetKey?: string): any;
  getForType(metadataKey: MetadataType, namespace: string, type: string, targetKey?: string): any;
  getAllForType(metadataKey: MetadataType, namespace: string, type: string): any;
  setForInstance(metadataKey: MetadataType, metadataValue: any, target: any, targetKey?: string): void;
  setForType(metadataKey: MetadataType, metadataValue: any, namespace: string, type: string, targetKey?: string): void;
}

export enum MetadataType {
  RequiredClaim,
  SchemaAttribute,
  SchemaClass,
  Promotion
}